
# name: CI Build and Push

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         service: [auth, products, orders]

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and Push ${{ matrix.service }}
#         run: |
#           docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest ./${{ matrix.service }}
#           docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest

name: CI Build and Push to ECR

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth, products, orders]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR to build and push Docker images
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push ${{ matrix.service }}
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY=$ECR_REGISTRY/my-app-${{ matrix.service }}
          docker build -t $ECR_REPOSITORY:latest ./${{ matrix.service }}
          docker tag $ECR_REPOSITORY:latest $ECR_REPOSITORY:$GITHUB_SHA
          docker push $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:$GITHUB_SHA